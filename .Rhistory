library(rmarkdown)
render("index.rmd")
render("index.rmd")
rm(list = ls())
render("index.rmd")
rm(list = ls())
render("index.rmd")
render("index.rmd")
render("index.rmd")
render("index.rmd")
render("index.rmd")
q()
n
getwd()
install.packages('AICcmodavg')
install.packages('caper')
install.packages('car')
install.packages('MuMIn')
install.packages('plotrix')
quartz()
pruned_data$Loglifespan
pruned_dat$Loglifespan
quartz()
quartz()
q()
n
q()
n
rm(list = ls())
render('index.rmd')
library(rmarkdown)
render('index.rmd')
rm(list = ls())
render('index.rmd')
render('index.rmd')
q()
n
install.packages('sensiPhy')
library(sensiPhy)
?samp_phylm
pruned_data$log.lifespan
pruned_dat$log.lifespan
summary(samp)
library(ggextra)
library(ggExtra)
library(gridExtra)
install.packages('gridExtra')
library(gridExtra)
library(ggplot2)
q()
n
library('rmarkdown')
render('index.rmd')
library(rmarkdown)
render('index.rmd')
q()
n
library(rmarkdown)
render('index.rmd')
q()
n
library(rmarkdown)
render('index.rmd')
q()
n
library(rmarkdown)
render('index.rmd')
render('index.rmd')
q()
n
library(rmarkdown)
render('index.rmd')
q()
n
install.packages('phylopath')
require(ggtreeExtra)
install.packages(c('ggtreeExtra', 'ggraph'))
library(ggraph)
library(graph)
install.packages('graph')
library(graph)
library(graph)
library(grid)
library(gridExtra)
BiocManager::install("graph")
n
library(graph)
plot_model_set(models)
library(vioplot)
install.packages('multi-comp')
install.packages('multcomp')
library(car)
library(moltcomp)
library(multcomp)
aov(log(Average_Telomere_Length_kb) ~ Endo_ectotherm + log.lifespan + log.mass, data = pruned_dat)
an-mod <- aov(log(Average_Telomere_Length_kb) ~ Endo_ectotherm + log.lifespan + log.mass, data = pruned_dat)
an.mod <- aov(log(Average_Telomere_Length_kb) ~ Endo_ectotherm + log.lifespan + log.mass, data = pruned_dat)
postHocs <- glht(an.mod, linfct = mcp(technique = "Tukey"))
postHocs <- glht(an.mod, linfct = mcp(technique = "Tukey"))
postHocs <- glht(an.mod, linfct = mcp(Endo_ectotherm = "Tukey"))
postHocs <- glht(an.mod, linfct = mcp(as.factor(Endo_ectotherm) = "Tukey"))
mean(log(pruned_data$Average_Telomere_Lenght_kb))
mean(log(pruned_dat$Average_Telomere_Lenght_kb))
mean(log(pruned_datAverage_Telomere_Length_kb))
log(pruned_datAverage_Telomere_Length_kb)
names(pruned_dat)
pruned_dat$Average_Telomere_Length_kb
mean(pruned_dat$Average_Telomere_Length_kb)
log(pruned_datAverage_Telomere_Length_kb)[pruned_dat$Endo_ectotherm == 'ecto']
mean(log(pruned_datAverage_Telomere_Length_kb)[pruned_dat$Endo_ectotherm == 'ecto'])
mean(log(pruned_datAverage_Telomere_Length_kb))[pruned_dat$Endo_ectotherm == 'ecto']
log(pruned_datAverage_Telomere_Length_kb)[pruned_dat$Endo_ectotherm == 'ecto'])
log(pruned_datAverage_Telomere_Length_kb))[pruned_dat$Endo_ectotherm == 'ecto']
log(pruned_datAverage_Telomere_Length_kb)[pruned_dat$Endo_ectotherm == 'ecto']
pruned_datAverage_Telomere_Length_kb[pruned_dat$Endo_ectotherm == 'ecto']
pruned_dat$Average_Telomere_Length_kb[pruned_dat$Endo_ectotherm == 'ecto']
log(pruned_dat$Average_Telomere_Length_kb[pruned_dat$Endo_ectotherm == 'ecto'])
mean(log(pruned_dat$Average_Telomere_Length_kb[pruned_dat$Endo_ectotherm == 'ecto']))
pagel.model0
summary(pagel.model0)
mean(log(pruned_dat$Average_Telomere_Length_kb[pruned_dat$Endo_ectotherm == 'ecto']))
mean(log(pruned_dat$Average_Telomere_Length_kb[pruned_dat$Endo_ectotherm == 'ecto'])) + 0.75
tapply(log(pruned_dat$Average_Telomere_Length_kb), pruned_dat$Endo_ectotherm, mean)
mean(log(pruned_datAverage_Telomere_Length_kb)[pruned_dat$Endo_ectotherm == 'ecto'])
mean(log(pruned_dat$Average_Telomere_Length_kb))
2.663895 - 2.695575
2.663895 - 2.653335
2.695575 - 2.653335
2.663895 - 0.04224
aov(pagel.model0)
anova(pagel.model0)
pruned_dat$Endo_ectotherm
unique(pruned_dat$Endo_ectotherm)
length(pruned_dat$Endo_ectotherm)
unique(unique(pruned_dat$Endo_ectotherm))
table(length(pruned_dat$Endo_ectotherm))
table(pruned_dat$Endo_ectotherm)
rm(list = ls())
library(rmarkdown)
render('index.rmd')
render('index.rmd')
render('index.rmd')
q()
n
library(ggplot2)
library(ggplot)
library(rmarkdown)
render('index.rmd')
pruned_data_tree
xtable(anova(pagel.model0))
xtable(anova(pagel.model0), digits = 3)
library(sensiPhy)
packageVersion(sensiPhy)
packageVersion('sensiPhy')
q()
n
library(rmarkdown)
rm(list = ls())
render('index.rmd')
png("figure3-1.png", width = 7, height = 7, units = "in", res = 360)
dev.off()
png("figure3-2.png", width = 7, height = 7, units = "in", res = 360)
dev.off()
png("figure3-3.png", width = 7, height = 7, units = "in", res = 360)
dev.off()
png("figure3-4.png", width = 7, height = 7, units = "in", res = 360)
dev.off()
pdf("figure3-1.pdf")
dev.off()
pdf("figure3-2.pdf")
dev.off()
pdf("figure3-3.pdf")
dev.off()
pdf("figure3-4.pdf")
dev.off()
anova(pagel.model0)
anova(pagel.model.red)
anova(pagel.model.redu)
anova(pagel.model.red)
anova(pagel.mod.red)
xtable(anova(pagel.mod.red), digits = 3)
q()
n
pruned_data_tree
path.mod[1:5, 1:5]
rm(list = ls())
class(s)
tapply(s$w, list(s$model), print)
tapply(s$w, list(s$model), print())
tapply(s$w, list(s$model))
tapply(s$w, list(s$model), print)
a <- tapply(s$w, list(s$model), print)
a
a
s
s[names(names(bar.pl), ]
s[names(bar.pl), ]
p.val <- s[names(bar.pl), ]
q()
n
dev.off()
dev.off()
quartz()
attributes(mcmc.model)
mcmc.model$par
q()
n
